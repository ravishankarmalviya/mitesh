<?php

use Drupal\Core\Block\BlockBase;

/**
 * @file
 * Contains mydata.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function mydata_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the mydata module.
    case 'help.page.mydata':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This dispaly information what you enter your application.') . '</p>';
      return $output;

    default:
  }
}

function mydata_theme() {
  // We use a template file to allow for translation of blocks of content.
  // Therefore we need to add this content at the theming layer.
  return [
    'mydata_description' => [
      'template' => 'description',
      'variables' => [],
    ],
  ];
}

function mydata_preprocess_block(&$variables){
	 
	
	if (isset($variables['elements']['#plugin_id']) && $variables['plugin_id'] = $variables['elements']['#plugin_id'] = "mydata_block"){
		$variables['content'] = $variables['elements']['content'];
	}
	 
 }
//function hook_delete($node) {} // Respond to node deletion. 
// function hook_form($node, &$form_state) {}     Display a node editing form. 
// function hook_insert($node) {}  Respond to creation of a new node. 
//function hook_load($nodes) {}     Act on nodes being loaded from the database. 
//function hook_node_delete($node) { }  Respond to node deletion. 
// hook_node_info()     Define module-provided node types. 
// function hook_node_insert($node) {}  Respond to creation of a new node. 
//function hook_node_prepare($node) { }  Act on a node object about to be shown on the add/edit form. 
// function hook_node_presave($node) {}     Act on a node being inserted or updated. 
//  function hook_node_revision_delete($node) {}   Respond to deletion of a node revision. 
 // function hook_node_search_result($node) {}   Act on a node being displayed as a search result. 
 // function hook_node_submit($node, $form, &$form_state) {}  Act on a node after validated form values have been copied to it. 
 // function hook_node_update($node) {}   Respond to updates to a node. 
 //function hook_node_update_index($node) {}  Act on a node being indexed for searching. 
 // function hook_node_validate($node, $form, &$form_state) {}   Perform node validation before a node is created or updated. 
 // function hook_node_view($node, $view_mode, $langcode) {}   Act on a node that is being assembled before rendering. 
 //function hook_node_view_alter(&$build) {}  Alter the results of node_view(). 
 //function hook_prepare($node) {}  Act on a node object about to be shown on the add/edit form. 
 //function hook_ranking() {}   Provide additional methods of scoring for core search results for nodes. 
 //function hook_update($node) {}  Respond to updates to a node. 
 //function hook_validate($node, $form, &$form_state) {}   Perform node validation before a node is created or updated. 
 //function hook_view($node, $view_mode, $langcode = NULL) {}       Display a node. 
 
 //Views Autocomplete Filters,modules_weight
function mydata_node_view(&$node, $view_mode, $langcode) {
	//var_dump($node);
	//die;
  //$strBody = $node->content['body'][0]['#markup'];
  //$node->content['body'][0]['#markup'] = 'my additional text' . $strBody;
}
